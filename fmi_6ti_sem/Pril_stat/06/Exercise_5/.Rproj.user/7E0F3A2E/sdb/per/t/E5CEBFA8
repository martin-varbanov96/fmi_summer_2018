{
    "collab_server" : "",
    "contents" : "           ######### APPLIED STATISTICS -> EXERCISE 5 (continuation of Exercise 3 & 4) #######\n\nrm(list=ls())                ########### Statistical test ##########\n\ninstall.packages(\"HSAUR\")         # Install package for datasets\n\n                                          ### Задача 5 ###\n# Като използвате данните \"water\" от пакета \"HSAUR\", проверете дали има зависимост \n# между смъртността и положението на населеното място, както и между твърдостта \n# на водата и положението на населеното място.\n\ndata(water,package = \"HSAUR\")\n??water\nstr(water)\nedit(water)\n\nmorSouth=water$mortality[water$location==\"South\"]\nmorNorth=water$mortality[water$location==\"North\"]\nhardSouth=water$hardness[water$location==\"South\"]\nhardNorth=water$hardness[water$location==\"North\"]\nks.test(morSouth,morNorth)\nks.test(hardSouth,hardNorth)\n\ncor.test(~mortality + hardness, data = water)\nt.test(mortality~location,data=water)\nt.test(hardness~location,data=water)\nrow1=tapply(water$mortality,water$location,mean)\nrow2=tapply(water$hardness,water$location,mean)\ntab=rbind(row1,row2)\nrownames(tab)=c(\"mortality\",\"hardness\")\ntab\n\n##############################################################################################\n\n                                            ### Задача 6 ###\n# Като използвате данните \"waves\" от пакета \"HSAUR\", проверете дали има значима разлика\n# между двата метода на закрепване (mooring).\ndata(waves,package = \"HSAUR\")\n??waves\nstr(waves)\nedit(waves)\nt.test(waves$method1,waves$method2,paired = TRUE)\nks.test(waves$method1,waves$method2)\ncor.test(~method1 + method2, data = waves)\n\n\n##############################################################################################\n                                            ### Задача 7 ###\n# Като използжате данните 'pi2000' от пакета 'UsingR', постройте barplot за вероятността за\n# всяка цифра от 0 до 9, срещащи се в първите 2000 цифри на числото пи. Добавете линията,  \n# сътветстваща на вероятността при равномерно разпределение. Статистически еднакви ли са \n# вероятностите за цифрите от 0 до 9?\n\ninstall.packages(\"UsingR\")\ndata(\"pi2000\",package = \"UsingR\")\nstr(pi2000)\nt=table(pi2000)\nn=length(t)\nbarplot(t/length(pi2000),\n        col=rgb(1:n,1:n,1:n,maxColorValue=n),cex.axis=1.5, cex.lab=1.5,cex.names=1.5,\n        xlab = \"Digit\",ylab = \"Probability\", main = \"First 2000 Digits in PI\")\nabline(h=1/n,col=2,lty=2,lwd=3)\nchisq.test(t,p=rep(1/n,n))\n\n##############################################################################################\n                                            ### Задача 8 ###\n# Като използвате данните \"pistonrings\" от пакета \"HSAUR\", проверете дали положението \n# на буталото (leg) оказва еднакво влияние за дефектите (failures) при различните \n# компресори (compressor).\n\ndata(pistonrings,package = \"HSAUR\")\n??pistonrings\nstr(pistonrings)\nedit(pistonrings)\npistonrings\nchisq.test(pistonrings)\nsummary(pistonrings)\n\n##############################################################################################\n                                        ### Задача 9 ###\n# Симулирайте хвърляне на правилен зар и проверете дали получените честоти съвпадат \n# с теоретично очакваните. Повторете симулацията за правилен и неправилен зар.\n\nroll=as.factor(sample(1:6,size=100,replace=TRUE))\n(freq = table(roll))\nprobs = c(1,1,1,1,1,1)/6 # or use rep(1/6,6)\nchisq.test(freq,p=probs)\n\ndieFair = as.factor(sample(1:6,100,p=c(1,1,1,1,1,1)/6,replace=T))\ndieBias = as.factor(sample(1:6,100,p=c(0.5,0.5,0.5,1.5,1.5,1.5)/6,replace=T))\nchisq.test(dieBias,dieFair) # WRONG!!!!\ntFair = table(dieFair)\ntBias = table(dieBias)\nchisq.test(rbind(tFair,tBias))\n##############################################################################################\n\nriffle.shuffle<-function(cards){\n  N=length(cards);\n  split=rbinom(1, N, 1/2);\n  if (split==0 | split==N) {return(cards);}\n  c1=0;\n  c2=0;\n  result=integer(N);\n  for (i in 1:N){\n    if (runif(1)<(split-c1)/(N-c1-c2)){\n      c1=c1+1;\n      result[i]=cards[c1];\n    }\n    else{\n      c2=c2+1;\n      result[i]=cards[split+c2];\n    }\n  }\n  return(result);\n}\nriffle.shuffle(1:10)\nriffle.shuffle(1:32)\nN=52;\n(rf=riffle.shuffle(1:N))\nif (any((rf-1:N)>0)) {\n  split=rf[min(which((rf-1:N)>0))]\n} else{split=N}\nidentity=1:N;\nplot(identity,col=2+2*(identity<split),pch = 19, cex = 2, lty = \"solid\")\ntext(identity, labels=identity, cex= 1.25, pos=1+2*(identity<split))\n\nplot(rf,col=2+2*(rf<split),pch = 19, cex = 2, lty = \"solid\")\ntext(rf, labels=rf, cex= 1.25, pos=1+2*(rf<split))\n\ninstall.packages(\"manipulate\")     \nlibrary(manipulate)\nmanipulate({plot(c(rf[1:x],x-sum(rf[1:x]<split)+(sum(rf[1:x]<split)+1):(split-1),(split+x-sum(rf[1:x]<split)):N),col=2+2*(c(rf[1:x],sort(rf[(x+1):N]))<split),pch = 19, cex = 2, lty = \"solid\");\n           text(c(rf[1:x],x-sum(rf[1:x]<split)+(sum(rf[1:x]<split)+1):(split-1),(split+x-sum(rf[1:x]<split)):N), labels=c(rf[1:x],sort(rf[(x+1):N])), cex= 1.25, pos=1+2*(c(rf[1:x],sort(rf[(x+1):N]))<split))},           \n           x=slider(1,N))\n\n                                                    ### Задача 10 ###\n# Като използвате функцията riffle.shuffle() и хи-квадрат тест за съгласуваност, намерете колко пъти е необходимо\n# да се приложи riffle shuffle за да се разбърка едно тесте карти по случаен начин.\n\n\n\n\n                                      ",
    "created" : 1521043562989.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "558888582",
    "id" : "E5CEBFA8",
    "lastKnownWriteTime" : 1521638232,
    "last_content_update" : 1521638232507,
    "path" : "C:/Stuffs/books/Acer_math/PS/Exercise_5/Script_exercise_5.R",
    "project_path" : "Script_exercise_5.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}