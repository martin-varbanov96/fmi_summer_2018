{
    "collab_server" : "",
    "contents" : "                         ######### APPLIED STATISTICS -> EXERCISE 6 #######\n\nrm(list=ls())                   #### Simple Linear Regression ####         \ninstall.packages(\"ISwR\")\ndata(\"thuesen\",package = \"ISwR\")\n??thuesen\nstr(thuesen)\nedit(thuesen)\noptions(na.action=na.omit) # omit NA's\nattach(thuesen)\nsummary(thuesen)\nplot(blood.glucose, short.velocity, xlim=c(0,20), ylim=c(1,2))\nlm(short.velocity ~ blood.glucose)\nmodel1=lm(short.velocity ~ blood.glucose)\ndetach(thuesen)\ntheFormula = short.velocity ~ blood.glucose\nmodel1=lm(formula = theFormula,data=thuesen)\nmodel1\nstr(model1)\nsummary(model1)               # analysis summary\nabline(model1)                # add regression line\ncoef(model1)                  # regression coefficients\nconfint(model1,level = 0.95)  # confidence interval for regression coefficients\nresid(model1)                 # residuals\nfitted(model1)                # fitted values\ndeviance(model1)              # residual sum of squares\npredict(model1,newdata=ndat)  # predict for new data\n\npredict(model1)\nx=as.data.frame(thuesen$blood.glucose[is.na(thuesen$short.velocity)])\nnames(x)=\"blood.glucose\"\npredict(model1,newdata=x)\nsum(coef(model1)*c(1,as.numeric(x)))\n\nplot(fitted(model1),resid(model1))\nqqnorm(resid(model1))\n\nplot(thuesen$blood.glucose, thuesen$short.velocity, xlim=c(0,20), ylim=c(1,2))\nabline(model1$coefficients, col='red', lwd=2)\npoints(thuesen$blood.glucose,predict(model1),pch=10)    # WRONG!\nmv = is.na(thuesen$short.velocity)\npoints(thuesen$blood.glucose[-which(mv)],predict(model1),pch=10)\n\nsegments(thuesen$blood.glucose,fitted(model1),\n         thuesen$blood.glucose,thuesen$short.velocity) # WRONG!\n\nplot(thuesen$blood.glucose, thuesen$short.velocity, xlim=c(0,20), ylim=c(1,2))\nabline(model1$coefficients, col='red', lwd=2)\nsegments(thuesen$blood.glucose[!mv],fitted(model1),\n         thuesen$blood.glucose[!mv],thuesen$short.velocity[!mv])\n\noptions(na.action=na.exclude) # exclude NA's\n\nmodel1=lm(formula = theFormula,data=thuesen)\nfitted(model1)\nplot(thuesen$blood.glucose, thuesen$short.velocity, xlim=c(0,20), ylim=c(1,2))\nabline(model1$coefficients, col='red', lwd=2)\nsegments(thuesen$blood.glucose,fitted(model1), thuesen$blood.glucose,thuesen$short.velocity)\n\n                                            #### Задача 1 ####\n# Начертайте и проектирайте в различен цвят наблюденията от данните 'thuesen', чиито грешки в \n# линейния модел са извън 90%-доверителен интерал, базиран на нормалното разпределение и оценената\n# стандартна грешка от модела.\n\noptions(na.action=na.omit)\nalpha=0.10\nmodel1=lm(short.velocity ~ blood.glucose,data=thuesen)\nresiduals1=resid(model1)\nse=sqrt(sum(residuals1^2)/(model1$df.residual))\ncv=qnorm(alpha/2,0,se,lower.tail=TRUE)\nmv = is.na(thuesen$short.velocity)\nplot(thuesen$blood.glucose[!mv], thuesen$short.velocity[!mv], \n     col = 1+(abs(residuals1)>=abs(cv)), pch=16, xlim=c(0,20), ylim=c(1,2))\nabline(model1,col=2, lwd=2)\nsegments(thuesen$blood.glucose[!mv],fitted(model1), \n         thuesen$blood.glucose[!mv],thuesen$short.velocity[!mv],\n         col = 1+(abs(residuals1)>=abs(cv)), lty=2)\n#############################################################################################\n\nminBG=floor(min(thuesen$blood.glucose))\nmaxBG=floor(max(thuesen$blood.glucose))+1\npredData <- data.frame(blood.glucose=minBG:maxBG)\npp <- predict(model1, int=\"p\", newdata=predData)\npc <- predict(model1, int=\"c\", newdata=predData)\nplot(thuesen$blood.glucose,thuesen$short.velocity,\n     ylim=range(thuesen$short.velocity, pp, na.rm=T))\nmatlines(predData, pc[,2:3], lty=c(2,2),col=c(4,4))\nmatlines(predData, pp[,2:3], lty=c(3,3),col=c(2,2))\n\nrm(list=ls())\ndata(\"thuesen\",package = \"ISwR\")\nwith(thuesen,{\n  model1=lm(short.velocity ~ blood.glucose)\n  summary(model1)\n  minBG=floor(min(blood.glucose))\n  maxBG=floor(max(blood.glucose))+1\n  predData <- data.frame(blood.glucose=minBG:maxBG)\n  pp <- predict(model1, int=\"p\", newdata=predData,level=0.95)\n  pc <- predict(model1, int=\"c\", newdata=predData)\n  plot(blood.glucose, short.velocity, xlim=range(blood.glucose),\n       ylim=range(short.velocity, pp, na.rm=T),pch=21,cex=1.5,bg=rgb(1/3,1/3,1/3))\n  abline(model1, col=rgb(220/255,0,0), lwd=3)\n  # segments(blood.glucose,fitted(model1),blood.glucose,short.velocity,lty=2)\n  matlines(predData, pc[,2:3], lty=c(2,2),col=rgb(0,1/2,0),lwd=c(2,2))\n  matlines(predData, pp[,2:3], lty=c(3,3),col=rgb(0,0,0),lwd=c(2,2))\n  legend('bottomright',\n         legend = c('Regression line','Confidence lines','Prediction lines'),\n         col=c(rgb(220/255,0,0),rgb(0,1/2,0),rgb(0,0,0)),lty=c(1,2,3),lwd=c(3,2,2))\n})\n##################################################################################################\n\noptions(na.action=na.exclude) # exclude NA's\ninstall.packages(\"manipulate\")     \nlibrary(manipulate)\nmanipulate(\n  with(thuesen,{\n    model1=lm(short.velocity[1:N] ~ blood.glucose[1:N])\n    plot(blood.glucose[1:N], short.velocity[1:N],pch=21,cex=1.5,bg=rgb(1/3,1/3,1/3),\n         xlim=range(blood.glucose),  ylim=range(short.velocity, na.rm=T))\n    abline(model1, col=rgb(220/255,0,0), lwd=3)\n    segments(blood.glucose[1:N],fitted(model1),blood.glucose[1:N],short.velocity[1:N],lty=2)\n  }),           \n  N=slider(2,length(thuesen$short.velocity)))\n##################################################################################################\n\nlibrary(readxl)\nread_excel(\"Data\\\\Cars_raw.xls\",sheet=1)\ndataM=as.data.frame(read_excel(\"Data\\\\Cars_raw.xls\",sheet=2)) # data for modelling\ndataP=as.data.frame(read_excel(\"Data\\\\Cars_raw.xls\",sheet=3)) # data for predictions\nstr(dataM)\nstr(dataP)\n                                            #### Задача 2 ####\n# Като изплозвате данните 'dataM' по-горе, конструирайте и изследвайте прост линеен модел за\n# предсказване на цената на автомобил втора употреба 'Y' на база на най-подходящата променлива 'X'. \n# Какви изводи може да направите?\n\n\n\n\n\n\n#####################################################################################################\nlibrary(MASS)\nrm(list=ls())\nstr(Boston)\n??Boston\nattach(Boston)\nlm.fit=lm(medv~lstat)\nlm.fit\nsummary(lm.fit)\nplot(lstat,medv)\npar(mfrow=c(2,2))\nplot(lm.fit)\nplot(predict(lm.fit), residuals(lm.fit))\nplot(predict(lm.fit), rstudent(lm.fit))\nplot(hatvalues(lm.fit))\npar(mfrow=c(1,1))\nwhich.max(hatvalues(lm.fit))\n\n# Non-linear transform\nlm.fit2=lm(medv~lstat+I(lstat^2))\nsummary(lm.fit2)\nlm.fit=lm(medv~lstat)\nanova(lm.fit,lm.fit2)\npar(mfrow=c(1,1))\nplot(lm.fit2)\nlm.fit5=lm(medv~poly(lstat,5))\nsummary(lm.fit5)\nsummary(lm(medv~log(rm)))\ndetach(Boston)\n\n\n",
    "created" : 1522224092097.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1053269802",
    "id" : "AAE067E1",
    "lastKnownWriteTime" : 1522224115,
    "last_content_update" : 1522224115467,
    "path" : "C:/Stuffs/books/Acer_math/PS/PS_Exercise_6/Script_exercise_6.R",
    "project_path" : "Script_exercise_6.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}