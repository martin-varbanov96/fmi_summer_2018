{
    "collab_server" : "",
    "contents" : "           ######### APPLIED STATISTICS -> EXERCISE 7 (continuation of Exercise 6) #######\n\n\n#####################################################################################################\nlibrary(MASS)\nrm(list=ls())\nstr(Boston)\n??Boston\nattach(Boston)\nlm.fit=lm(medv~lstat)\nlm.fit\nsummary(lm.fit)\nplot(lstat,medv)\npar(mfrow=c(2,2))\nplot(lm.fit)\nplot(predict(lm.fit), residuals(lm.fit))\nplot(predict(lm.fit), rstudent(lm.fit))\nplot(hatvalues(lm.fit))\npar(mfrow=c(1,1))\nwhich.max(hatvalues(lm.fit))\n\n# Non-linear transform\nlm.fit2=lm(medv~lstat+I(lstat^2))\nsummary(lm.fit2)\nlm.fit=lm(medv~lstat)\nanova(lm.fit,lm.fit2)\npar(mfrow=c(1,1))\nplot(lm.fit2)\nlm.fit5=lm(medv~poly(lstat,5))\nsummary(lm.fit5)\nsummary(lm(medv~log(rm)))\ndetach(Boston)\n\n###################################################################################################\nrm(list=ls())                   \nlibrary(readxl)\nread_excel(\"Data\\\\Cars_raw.xls\",sheet=1)\ndataM=as.data.frame(read_excel(\"Data\\\\Cars_raw.xls\",sheet=2)) # data for modelling\ndataP=as.data.frame(read_excel(\"Data\\\\Cars_raw.xls\",sheet=3)) # data for predictions\nstr(dataM)\nstr(dataP)\n                                            #### Задача 2 ####\n# Като изплозвате данните 'dataM' по-горе, конструирайте и изследвайте прост линеен модел за\n# предсказване на цената на автомобил втора употреба 'Y' на база на най-подходящата променлива 'X'. \n# Какви изводи може да направите?\n\n# Correlation table\ncorTable=cor(dataM)\n# test=cor.test(dataM[,1],dataM[,2])\n# str(test)\ngetCor <- function(x){\n  a=cor.test(dataM[,1],dataM[,x])\n  return(c(est=a$estimate,pValue=a$p.value))\n}\nind=2:length(dataM)\ncorVector=sapply(ind,getCor)\ncorVector\ncolnames(corVector)=mapply(paste,\"X\",ind-1,sep=\"\")\n\n# Data preparation\nord_index=order(corVector[2,])\ncorVector[,ord_index]\ndataM[,length(dataM)+1]=dataM[,ord_index[1]+1]\nnames(dataM)[length(dataM)]=paste(\"X\")\nstr(dataM)\n\n# Model 1 + Scatter plot + Confidence and prediction lines\nmodel1=lm(Y ~ X,data = dataM)\nminX=floor(min(dataM$X))\nmaxX=floor(max(dataM$X))+1\npredData <- data.frame(X=minX:maxX)\npp <- predict(model1, int=\"p\", newdata=predData,level=0.95)\npc <- predict(model1, int=\"c\", newdata=predData)\nplot(dataM$X, dataM$Y, xlim=range(dataM$X),\n     ylim=range(dataM$Y, pp, na.rm=T),pch=21,cex=1.5,bg=rgb(1/3,1/3,1/3))\nabline(model1, col=rgb(220/255,0,0), lwd=3)\nmatlines(predData, pc[,2:3], lty=c(2,2),col=rgb(0,1/2,0),lwd=c(2,2))\nmatlines(predData, pp[,2:3], lty=c(3,3),col=rgb(0,0,0),lwd=c(2,2))\nlegend('topright',\n       legend = c('Regression line','Confidence lines','Prediction lines'),\n       col=c(rgb(220/255,0,0),rgb(0,1/2,0),rgb(0,0,0)),lty=c(1,2,3),lwd=c(3,2,2))\n\n\nsummary(model1)\nse=sqrt(deviance(model1)/df.residual(model1))\nse                  # standard error\nrse=se/mean(dataM$Y)\nrse                 # realtive standard error\n\nplot(model1)\nshapiro.test(residuals(model1))\nks.test(residuals(model1),\"pnorm\",mean=0,sd=se)\n\n                              ### Bartlett test for heteroscedasticity ###\ndataM[,length(dataM)+1]=as.factor(dataM$X>median(dataM$X))\nnames(dataM)[length(dataM)]=paste(\"X_Groups\")\nlevels(dataM[,length(dataM)])=c(\"Group 1\",\"Group 2\")\nstr(dataM)\nlmg1=lm(Y~X,data = dataM, subset = which(dataM$X_Groups==\"Group 1\"))\nlmg2=lm(Y~X,data = dataM, subset = which(dataM$X_Groups==\"Group 2\"))\nbartlett_stat=deviance(lmg1)/deviance(lmg2)\nif(bartlett_stat>1){\n  bartlett_p.value=pf(bartlett_stat, df.residual(lmg1), df.residual(lmg2), lower.tail = FALSE)\n} else{\n  bartlett_p.value=pf(1/bartlett_stat, df.residual(lmg2), df.residual(lmg1), lower.tail = FALSE)}\nc(\"Stat\"=bartlett_stat,\"p.value\"=bartlett_p.value)\n#####################################################################################################\n\nset.seed(1)\nx1=runif(100)\nx2=0.5*x1+rnorm(100)/10\ny=2+2*x1+0.3*x2+rnorm(100)\n                                            #### Задача 3 ####\n# Намерете корелацията между х1 и х2 и начертайте scatterplot, за да изобразите връзката между двете\n# променливи. Значими ли са коефициентите пред х1 и х2 в модела y~x1+x2 ? А в моделите y~x1 и y~x2?\n# Обяснете получените резултати.\n\n\n\n\n\n\n\n\n\n####################################################################################################\nrm(list=ls())                   \nlibrary(readxl)\nread_excel(\"Data\\\\Cars_raw.xls\",sheet=1)\ndataM=as.data.frame(read_excel(\"Data\\\\Cars_raw.xls\",sheet=2)) # data for modelling\ncorTable=cor(dataM)\n\nmodel2=lm(Y~X2+X4,data = dataM)\nsummary(model2)\n\nQMC_X10=lm(X10~X2+X4,data = dataM)\nsummary(QMC_X10)\nmodel3=lm(Y~X2+X4+X10,data = dataM)\nsummary(model3)\n\nQMC_X1=lm(X1~X2+X4+X10,data = dataM)\nsummary(QMC_X1)\nmodel4=lm(Y~X2+X4+X10+X1,data = dataM)\nsummary(model4)\n\nQMC_X3=lm(X3~X2+X4+X10,data = dataM)\nsummary(QMC_X3)\nmodel5=lm(Y~X2+X4+X10+X3,data = dataM)\nsummary(model5)\n\nQMC_X5=lm(X5~X2+X4+X10+X3,data = dataM)\nsummary(QMC_X5)\nmodel6=lm(Y~X2+X4+X10+X3+X5,data = dataM)\nsummary(model6)\n\nQMC_X8=lm(X8~X2+X4+X10+X3+X5,data = dataM)\nsummary(QMC_X8)\nmodel7=lm(Y~X2+X4+X10+X3+X5+X8,data = dataM)\nsummary(model7)\n\nQMC_X7=lm(X7~X2+X4+X10+X3+X5,data = dataM)\nsummary(QMC_X7)\n\nQMC_X9=lm(X9~X2+X4+X10+X3+X5,data = dataM)\nsummary(QMC_X9)\nmodel8=lm(Y~X2+X4+X10+X3+X5+X9,data = dataM)\nsummary(model8)\n\nQMC_X6=lm(X6~X2+X4+X10+X3+X5+X9,data = dataM)\nsummary(QMC_X6)\nmodel9=lm(Y~X2+X4+X10+X3+X5+X9+X6,data = dataM)\nsummary(model9)\n\nmodel=lm(Y~X2+X4+X10+X3+X5+X9,data = dataM)\nsummary(model)\n\n\n",
    "created" : 1523433072284.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2537896632",
    "id" : "1EC196B1",
    "lastKnownWriteTime" : 1523433088,
    "last_content_update" : 1523433088620,
    "path" : "C:/Stuffs/books/Acer_math/PS/PS_Exercise_7/Script_exercise_7.R",
    "project_path" : "Script_exercise_7.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}