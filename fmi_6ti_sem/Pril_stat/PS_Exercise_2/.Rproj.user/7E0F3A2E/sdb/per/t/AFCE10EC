{
    "collab_server" : "",
    "contents" : "              ############ APPLIED STATISTICS -> EXERCISE 2 (continuation of Exercise 1) ############\n\n############################################################\nrm(list = ls()) # rm() -----> remove objects; ls() -----> list of all objects\n\n                                              ### Задача 2 ### \n# Генерирайте 1000 проявления на случайната величина Z с плътност f_Z(x)=f_X(x)*99/100+f_Y(x)*1/100, \n# където f_X(x) и f_Y(x) са плътностите съответно на X~N(1,4) и Y~N(100,9). Има ли несъгласувани \n# наблюдения в получената извадка? Намерете ги и обяснете причината за наличието им.\np=runif(1000,0,1)>99/100;\nsimData=rnorm(1000,1+(100-1)*p,sqrt(4)+(sqrt(9)-sqrt(4))*p)\nany(abs((simData-median(simData)))>3*mad(simData))  \nsimData[which(abs((simData-median(simData)))>3*mad(simData))]\n              \n              \n\n                                           ### Functions ###\n\nmean.and.sd <- function(x){\n  av <- mean(x)\n  sdev <- sd(x)\n  return(c(mean=av, SD=sdev))\n}\nuniData<-runif(1000,min = 0,max = 1)  # runif - генерира равномерно разпределени сл.в.\n1/2; sqrt(1/12)\nmean.and.sd(uniData)\n\n\nnorm.contaminated.sample <-function(mu1,sigma1,mu2=0,sigma2=1,proportion=1/2,size=1){\n  p=runif(size,0,1)>proportion;\n  return(rnorm(size,mu1+(mu2-mu1)*p,sigma1+(sigma2-sigma1)*p))\n}\nnorm.contaminated.sample(100,1,proportion=1/5,size=20)\n####################################################################################################\n\n                                            ### Задача 3 ###\n# Напишете функция rand.Circle(), която да генерира n на брой равномерно разпределени точки от кръг  \n# с център (x_0,y_0) и радиус r. Използвайте функцията plot() за да изобразите резултата от изпълнението \n# на функцията rand.Circle().\n\n# Hint: Използвайте полярното представяне на точките от кръга:\n# x=x_0+r*cos(theta)\n# y=y_0+r*sin(theta)\n\n\n\n\n\n\n                  ### if, else, for, repeat, while, break, next ###\n# if Statement\na<-sample((-100):100,1)\nif (a>0) print(paste(\"Числото\",a,\"е положително!\",sep = \" \"))\n\n# if () {} else {}\na<-sample(100:1000,1)\nb=2\ndeliSe=paste(\"Числото\",a,\"се дели на\",b,\"!\",sep = \" \")\nneSeDeli=paste(\"Числото\",a,\"не се дели на\",b,\"!\",sep = \" \")\n\nif (a%%b==0) { print(deliSe) \n} else {print(neSeDeli)}\n\n#ifelse()\nifelse(a%%b, neSeDeli, deliSe)\n\n# for(... in ...){}\nn=30\nfor (i in 1:n){\n  a<-sample(100:1000,1)\n  if (a%%2==0 & a%%3==0) print(paste(\"Числото\",a,\"се дели на 6!\",sep = \" \"))\n}\n\n# repeat + break\na=1\nrepeat {\n  print(a)\n  a=a+1\n  if (a==10){\n    break\n  }\n}\n\n# while\na=1\nwhile (a<10){\n  print(a)\n  a=a+1\n}\n\n# next\nfor(i in 1:10){\n  if(i%%2==0) { print(i)\n  } else next\n}\n\n                                                    ### Задача 4 ###\n# Пресметнете вероятността в група от 23 човека да има поне двама, които имат рожден ден на една и\n# съща дата от годината. Намерете приближение на тази вероятност като направите 10000 симулации на\n# този експеримент.\n\np.comp=1;\nfor (i in 1:23){\n  p.comp=p.comp*(366-i)/365;\n}\n(p=1-p.comp)\n# Alternative way\n{\n  p.comp=(366-1:23)/365;\n  (p=1-prod(p.comp))\n}\n\nsingle.Sim <- function(n){\n  group.Sim=as.integer(runif(n,1,366))\n  return(any(duplicated(group.Sim)))\n}\n\ncount=0;\nfor (i in 1:10000){\n  count=count+single.Sim(23);\n}\n(p.approx=count/10000)\n# Alternative way\n{\n  sum(sapply(rep(23,10000),single.Sim))/10000\n}\n####################################################################################################\n\n                                                ### Задача 5.1 ###\n# Напишете функция square.approx.Pi(), която да дава оценка на числото Пи, базирана на вероятността\n# случайно избрана точка от единичния квадрат да е в единичния кръг. Нека аргумент на функцията е \n# trials - брой на генерираните точки от единичния квадрат.\n\n\n\n\n\n\n\n\n                                                  ### Задача 5.2 ###\n# Направете 10000 оценки на числото Пи, като използвате функцията square.approx.Pi() \n# с аргумент trials=100. Съхранете полученият резултат във вектор approx.Pi и за него \n# намерете най-малкия елемент, най-големия елемент, средноаритметичното, медианата,\n# стандартното отклонение, първия и третия квартил. Сравнете получените оценки за \n# очакване и дисперсия с теоретичните. Като използвате ЦГТ, постройте 95% доверителен интервал\n# за очакването на approx.Pi.\nn=10000\ntrials=100\n\napprox.Pi=numeric(n);\nfor(i in 1:n){\n  approx.Pi[i]=square.approx.Pi(trials);\n}\n# Alternative way\n{\n  approx.Pi=sapply(rep(trials,n),square.approx.Pi)\n} \n\nmin(approx.Pi)\nmax(approx.Pi)\nmean(approx.Pi)\npi # Theoretical mean\nmedian(approx.Pi)\nsd(approx.Pi)\nsqrt(pi*(4-pi)/trials) # Theoretical standard deviation\nsummary(approx.Pi)\n\nalpha=0.05\nth.limits=c(lower.bound=qnorm(alpha/2,mean=pi,sd=sqrt(pi*(4-pi)/trials),lower.tail = TRUE),\n           upper.bound=qnorm(alpha/2,mean=pi,sd=sqrt(pi*(4-pi)/trials),lower.tail = FALSE))\nth.limits\n\nemp.limits=c(lower.bound=qnorm(alpha/2,mean=mean(approx.Pi),sd=sd(approx.Pi),lower.tail = TRUE),\n            upper.bound=qnorm(alpha/2,mean=mean(approx.Pi),sd=sd(approx.Pi),lower.tail = FALSE))\nemp.limits\n\nboxplot(approx.Pi)\nhist(approx.Pi,probability = TRUE)\nabline(v=emp.limits,col=3,lty=2,lwd=2)\n# Arguments(colors, styles and ect.) for points and lines\n{\n?par\n?points\nplot(1:25,pch=1:25,cex=seq(3,1,length.out = 25))\nabline(v=1:10,lty=1:10,col=c(1:8,rgb(0.5,0.5,0.5),rgb(165/255,75/255,165/255)),lwd=10:1)\n}\n####################################################################################################\n\n                                            ### Задача 6 ###\n# Като използвате функцията norm.contaminated.sample(), генерирайте 100 проявления на случайната \n# величина Z с плътност f_Z(x)=f_X(x)*4/5+f_Y(x)*1/4, където f_X(x) и f_Y(x) са плътностите \n# съответно на X~N(0,1) и Y~N(4,1). Постройте boxplot и хистограма на получените данни. Можем ли\n# да приемем нулевата хипотеза, че данните са нормално разпледелени с очакване 1 при ниво на съгласие\n# alpha=0.05? Каква е стойността на p-value на статистиката? Нормално ли са разпределени данните?\ndata=norm.contaminated.sample(0,1,4,1,proportion=3/4,size=100)\nboxplot(data,col = \"lightgrey\",outcol=\"red\", outlwd=2)\nd=density(data,bw=\"SJ\")\nh=hist(data,prob=TRUE)\nlines(d,col='blue',lwd=2)\ncurve(dnorm(x, mean=mean(data), sd=sd(data)), add=TRUE, col=2,lwd=2)\n(mu=mean(data))\n(sd=sd(data))\n(tStat=sqrt(100)*(mu-1)/sd)\nalpha=0.05;\n(criticalValue=abs(qt(alpha/2,100-1)))\n\nt.test(data, mu=1)\nshapiro.test(data)\n\n\n",
    "created" : 1519802540744.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "107|1|110|0|\n155|1|157|0|\n181|1|186|0|\n",
    "hash" : "3125200620",
    "id" : "AFCE10EC",
    "lastKnownWriteTime" : 1519808673,
    "last_content_update" : 1519808673988,
    "path" : "C:/Stuffs/books/Acer_math/PS/PS_Exercise_2/Script_exercise_2.R",
    "project_path" : "Script_exercise_2.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}