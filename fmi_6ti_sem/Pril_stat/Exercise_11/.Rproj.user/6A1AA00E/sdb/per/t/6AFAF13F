{
    "collab_server" : "",
    "contents" : "rm(list=ls())                     ###### Exercise 5 ######\n\n                                     #### Graphics ####\n\n                                        ### Plot ###\nx<-1:50\ny<-log(x)\nplot(x,y)\nabline(h=2)           \nidentify(x,y,n=2)\n\nx\nclass(x)\nplot(x)\nxx <- ts(x)\nxx\nclass(xx)\nplot(xx)\nmethods(plot)\n\nx11()\n?mtcars\nstr(mtcars)\nplot(mtcars$mpg)\nidentify(mtcars$mpg,n=3,labels = rownames(mtcars))\n\n?device()\npdf(file = \"testPlot.pdf\")\nx<-1:50\ny<-log(x)\nplot(x,y)\nabline(h=2)\ndev.off()\n\njpeg(file = \"testPlotMGPvsHP.jpeg\")\n# plot(mtcars$mpg,mtcars$hp)\nattach(mtcars)\nplot(mpg,hp)\ndetach(mtcars)\ndev.off()\n\nplot(hp~mpg, data=mtcars,col='red',pch=2)\n?par\n?points\nplot(1:25,pch=1:25,cex=1.5)\nabline(v=1:10,lty=1:10,col=c(1:8,rgb(0.5,0.5,0.5),rgb(165/255,75/255,165/255)),lwd=3)\n\n\ninstall.packages(\"MASS\")\ndata(\"Cars93\",package = \"MASS\")      # Не е нужно да се зарежда пакета \"MASS\"\nstr(Cars93)\nplot(Cars93[,12:14])\n\n                                            ### Задача 1 ###\n# Порверете дали променливата 'Fuel.tank.capacity' от данните 'Cars93' има нормално рапределение.\n# Начертайте scaterplot на данните и добавете линии обозначаващи 95% доверителен интервал за\n# очакването на 'Fuel.tank.capacity'. Нека точките извън този интервал са в друг цвят и с друг\n# символ. Каква марка и какъв модел са тези наблюдения? \n\nx=Cars93$Fuel.tank.capacity\nshapiro.test(x)\nks.test(x,\"pnorm\",mean(x),sd(x))\nalpha=0.95\nlb=qnorm((1-alpha)/2,mean(x),sd(x))\nub=qnorm((1+alpha)/2,mean(x),sd(x))\nplot(x,pch=21+2*((x>=ub)+(x<=lb)),\n     col=1+((x>=ub)+(x<=lb)),cex=1.5,lwd=2,cex.axis=1.5,cex.lab=1.5,\n     bg=rgb(0.75*((x<ub)*(x>lb))+((x>=ub)+(x<=lb)),0.75*((x<ub)*(x>lb)),0.75*((x<ub)*(x>lb))),\n     xlab=\"Obesrvation Number\",ylab = \"Fuel Tank Capacity\")\nabline(h=lb,col=2,lwd=2,lty=2)\nabline(h=ub,col=2,lwd=2,lty=2)\nidentify(x,n=3,labels = Cars93$Make)\n################################################################################\n\npar(mfrow=c(1,2))\n# plot(mtcars$mpg)\n# plot(mtcars$hp)\nwith(mtcars,{\n  plot(mpg)\n  plot(hp)\n})\npar(mfrow=c(1,1))\n\n?iris\nedit(iris)\nstr(iris)\nplot(iris$Sepal.Length,iris$Sepal.Width,\n     pch=as.numeric(iris$Species),col=as.numeric(iris$Species),\n     xlab = \"length\",ylab = \"width\", main = \"NICE TITLE\")\nlegend('topleft',legend = levels(iris$Species),col=c(1,2,3),pch=c(1,2,3))\n\n                                    ### Barplot ###\nstr(mtcars)\nattach(mtcars)\ncyl\nbarplot(cyl)                      # Wrong usage !!!\ntable(cyl)\n?barplot\nbarplot(table(cyl))\ntable(cyl)/length(cyl)\nbarplot(table(cyl)/length(cyl))\ndetach(mtcars)\n\n                                    ### Задача 2 ###\n# Като използжате данните 'pi2000' от пакета 'UsingR', постройте barplot за вероятността за\n# всяка цифра от 0 до 9, срещащи се в първите 2000 цифри на числото пи. Добавете линията,  \n# сътветстваща на вероятността при равномерно разпределение. Статистически еднакви ли са \n# вероятностите за цифрите от 0 до 9?\n\ninstall.packages(\"UsingR\")\ndata(\"pi2000\",package = \"UsingR\")\nstr(pi2000)\nt=table(pi2000)\nn=length(t)\nbarplot(t/length(pi2000),\n        col=rgb(1:n,1:n,1:n,maxColorValue=n),cex.axis=1.5, cex.lab=1.5,cex.names=1.5,\n        xlab = \"Digit\",ylab = \"Probability\", main = \"First 2000 Digits in PI\")\nabline(h=1/n,col=2,lty=2,lwd=3)\nchisq.test(t,p=rep(1/n,n))\n\n                                  ### Histogram ###\n\nx=rt(100,5)\nhist(x,breaks = 10,prob=FALSE)\nhist(x,25,prob=FALSE)\nhist(x,5,prob=FALSE)\nhist(x,prob=FALSE)\n\ninstall.packages(\"manipulate\")     \nlibrary(manipulate)\nmanipulate(hist(x,binNumber,prob=FALSE),binNumber=slider(2,length(x)))\nmanipulate(hist(rt(1000,df),breaks=seq(from=-5.5,to=5.5,by=0.5),prob=TRUE),df=slider(20,120))\nmanipulate(hist(rt(100,df),binNumber,prob=TRUE),df=slider(2,120),binNumber=slider(2,100))\n\nh=hist(x,prob=FALSE)\nh$breaks\nlength(h$breaks)-1\nlines(c(min(h$breaks),h$mids,max(h$breaks)),c(0,h$counts,0),type=\"l\",col=2,lwd=2)\n\nhist(x,prob=TRUE)\nlines(density(x,bw=0.1),col='red',lwd=2)\nlines(density(x,bw=0.5),col='blue',lwd=2)\nlines(density(x,bw=1),col='green',lwd=2)\nlines(density(x,bw=\"SJ\"),col='black',lwd=2)\n\nnData=rnorm(100,mean=10,sd=3)\nhist(nData,prob=TRUE)\ncurve(dnorm(x, mean=mean(nData), sd=sd(nData)), add=TRUE, col=2,lwd=2)\ncurve(dnorm(x, mean=10, sd=3), add=TRUE, col=4,lwd=2)\n\n                                            ### Задача 3 ###\n# Като изполвате фукцията density(), определете оптималния брой на стълбове за построяване на \n# хистограма за променливата 'Weight' от данните 'Cars93'. Начертайте описаната хистограма и \n# добавете кривите приближаващи плътността получени чрез нормално приближение и чрез изглаждане,\n# базирано на ядра. Изполвайте данните от хистограмата, проверете дали променливата 'Weight' е\n# нормално разпределена.\n\nw=Cars93$Weight\na=density(w,bw=\"SJ\")\nh=hist(w,breaks = floor((max(w)-min(w))/a$bw),prob=TRUE)\nlines(a,col='blue',lwd=2)\ncurve(dnorm(x, mean=mean(w), sd=sd(w)), add=TRUE, col=2,lwd=2)\nn=length(h$counts)\nprobs=c((pnorm(h$breaks[2:n],mean(w),sd(w))-c(0,pnorm(h$breaks[2:(n-1)],mean(w),sd(w)))),\n        1-pnorm(h$breaks[n],mean(w),sd(w)))\nchisq.test(h$counts,p=probs)\nshapiro.test(w)\nks.test(w,\"pnorm\",mean(w),sd(w))\n\n\n",
    "created" : 1510577243852.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2547023549",
    "id" : "6AFAF13F",
    "lastKnownWriteTime" : 1510577230,
    "last_content_update" : 1510577230,
    "path" : "C:/Users/grade/Downloads/Exercise_5/Script_exercise_5.R",
    "project_path" : "Script_exercise_5.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}